# Generated by Django 3.0.2 on 2020-01-15 19:57

import achieve.models
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('edu_tatar', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=300, unique=True, verbose_name='Уровень')),
                ('coefficient', models.FloatField(default='1', verbose_name='Коэффициент')),
            ],
            options={
                'verbose_name': 'Уровень участия',
                'verbose_name_plural': 'Уровни участия',
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(max_length=300, unique=True, verbose_name='Результат')),
                ('coefficient', models.FloatField(default='1', verbose_name='Коэффициент')),
            ],
            options={
                'verbose_name': 'Результат участия',
                'verbose_name_plural': 'Результат участия',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=300, verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_achieve', models.CharField(max_length=300, unique=True, verbose_name='Вид события')),
                ('coefficient', models.FloatField(default='1', verbose_name='Коэффициент')),
            ],
            options={
                'verbose_name': 'Вид конкурса',
                'verbose_name_plural': 'Виды конкурса',
            },
        ),
        migrations.CreateModel(
            name='TypeAchieve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_achieve', models.CharField(max_length=300, unique=True, verbose_name='Вид достижения')),
                ('coefficient', models.FloatField(default='1', verbose_name='Коэффициент')),
            ],
            options={
                'verbose_name': 'Тип достижения',
                'verbose_name_plural': 'Типы достижения',
            },
        ),
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата получения')),
                ('text', tinymce.models.HTMLField(default='', verbose_name='Описание')),
                ('image_1', models.ImageField(upload_to=achieve.models.get_file_path, verbose_name='Изображение (главное)')),
                ('level', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='achieve.Levels', verbose_name='Уровень участия')),
                ('result', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='achieve.Results', verbose_name='Результат участия')),
                ('speshial', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='achieve.Type', verbose_name='Вид события')),
                ('student', models.ManyToManyField(to='edu_tatar.Students', verbose_name='Ученик')),
                ('subject', models.ManyToManyField(to='achieve.Subjects', verbose_name='Предметы')),
                ('teacher', models.ManyToManyField(to='edu_tatar.Teachers', verbose_name='Учитель')),
                ('type_achieve', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='achieve.TypeAchieve', verbose_name='Вид достижения')),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
            },
        ),
    ]
